{"ast":null,"code":"import Workingcontext from\"./workingcontext\";import{toast}from\"react-toastify\";import{jsx as _jsx}from\"react/jsx-runtime\";var WorkingState=function WorkingState(props){var notworkingalert=function notworkingalert(){alert(\"website is in developoning state\");};var customtoast=function customtoast(msg,state){if(state===\"success\"){toast.success(msg);}else if(state===\"info\"){toast.info(msg);}else if(state===\"warn\"){toast.warn(msg);}else if(state===\"error\"){toast.error(msg);}else if(state===\"default\"){toast(msg);}};return/*#__PURE__*/_jsx(Workingcontext.Provider,{value:{notworkingalert:notworkingalert,customtoast:customtoast},children:props.children});};export default WorkingState;","map":{"version":3,"sources":["/home/bhomik/Desktop/host website/Easycode/server/client/src/contexts/workngalert/workingstate.js"],"names":["Workingcontext","toast","WorkingState","props","notworkingalert","alert","customtoast","msg","state","success","info","warn","error","children"],"mappings":"AAAA,MAAOA,CAAAA,cAAP,KAA2B,kBAA3B,CACA,OAASC,KAAT,KAAsB,gBAAtB,C,2CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAW,CAC9B,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CAC5BC,KAAK,CAAC,kCAAD,CAAL,CACD,CAFD,CAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,GAAD,CAAMC,KAAN,CAAgB,CAClC,GAAIA,KAAK,GAAK,SAAd,CAAyB,CACvBP,KAAK,CAACQ,OAAN,CAAcF,GAAd,EACD,CAFD,IAEO,IAAIC,KAAK,GAAK,MAAd,CAAsB,CAC3BP,KAAK,CAACS,IAAN,CAAWH,GAAX,EACD,CAFM,IAEA,IAAIC,KAAK,GAAK,MAAd,CAAsB,CAC3BP,KAAK,CAACU,IAAN,CAAWJ,GAAX,EACD,CAFM,IAEA,IAAIC,KAAK,GAAK,OAAd,CAAuB,CAC5BP,KAAK,CAACW,KAAN,CAAYL,GAAZ,EACD,CAFM,IAEA,IAAIC,KAAK,GAAK,SAAd,CAAyB,CAC9BP,KAAK,CAACM,GAAD,CAAL,CACD,CACF,CAZD,CAcA,mBACE,KAAC,cAAD,CAAgB,QAAhB,EAAyB,KAAK,CAAE,CAAEH,eAAe,CAAfA,eAAF,CAAmBE,WAAW,CAAXA,WAAnB,CAAhC,UACGH,KAAK,CAACU,QADT,EADF,CAKD,CAvBD,CAwBA,cAAeX,CAAAA,YAAf","sourcesContent":["import Workingcontext from \"./workingcontext\";\nimport { toast } from \"react-toastify\";\n\nconst WorkingState = (props) => {\n  const notworkingalert = () => {\n    alert(\"website is in developoning state\");\n  };\n  const customtoast = (msg, state) => {\n    if (state === \"success\") {\n      toast.success(msg);\n    } else if (state === \"info\") {\n      toast.info(msg);\n    } else if (state === \"warn\") {\n      toast.warn(msg);\n    } else if (state === \"error\") {\n      toast.error(msg);\n    } else if (state === \"default\") {\n      toast(msg);\n    }\n  };\n\n  return (\n    <Workingcontext.Provider value={{ notworkingalert, customtoast }}>\n      {props.children}\n    </Workingcontext.Provider>\n  );\n};\nexport default WorkingState;\n"]},"metadata":{},"sourceType":"module"}